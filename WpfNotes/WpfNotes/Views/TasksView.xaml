<UserControl
    x:Class="WpfNotes.Views.TasksView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:WpfNotes.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.35*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--  Left Panel (Categories)  -->
        <StackPanel
            Grid.Column="0"
            Background="White"
            Orientation="Vertical">

            <TextBlock Margin="5" FontSize="18">Categories</TextBlock>

            <Button
                Margin="10"
                Padding="5"
                HorizontalContentAlignment="Left"
                Background="Transparent"
                Command="{Binding CreateCategoryCommand}"
                Content="New..."
                Foreground="Gray" />

            <!--  Categories list  -->
            <ListBox
                Margin="10"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                BorderThickness="0"
                ItemsSource="{Binding Categories}"
                SelectedItem="{Binding SelectedCategory}">

                <!--  Set light yellow color for selected item  -->
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border
                                        x:Name="Border"
                                        Padding="2"
                                        SnapsToDevicePixels="true">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#fff9db" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>

                <i:Interaction.Triggers>
                    <!--  Select task category  -->
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ChangeSelectedCategoryCommand}" CommandParameter="{Binding SelectedCategory}" />
                    </i:EventTrigger>
                    <!--  Double click on task category  -->
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding EditCategoryCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>

        <!--  Grid splitter  -->
        <GridSplitter
            Grid.Column="1"
            Width="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch"
            ShowsPreview="False" />

        <!--  Right Panel (Tasks)  -->
        <Grid Grid.Column="2" Background="#f5f3e5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  Search box  -->
            <TextBox
                x:Name="SearchTextBox"
                Grid.Row="0"
                Margin="10"
                Padding="5"
                VerticalAlignment="Top"
                GotFocus="SearchTextBox_GotFocus"
                LostFocus="SearchTextBox_LostFocus"
                Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:PropertyChangedTrigger Binding="{Binding SearchText}">
                        <i:InvokeCommandAction Command="{Binding SearchTaskCommand}" CommandParameter="{Binding SearchText}" />
                    </i:PropertyChangedTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <!--  search hint  -->
            <TextBlock
                x:Name="HintSearchTextBlock"
                Grid.Row="0"
                Margin="10"
                Padding="5"
                VerticalAlignment="Top"
                Foreground="Gray"
                IsHitTestVisible="False"
                Text="Search"
                Visibility="Visible" />

            <!--  Tasks list  -->
            <ListBox
                Grid.Row="1"
                Margin="5"
                Background="Transparent"
                ItemsSource="{Binding Tasks}"
                SelectedItem="{Binding SelectedTask}">

                <!--  Double click on task  -->
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding EditTaskCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <!--  Do not show vertical scrollbar  -->
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.Resources>
                    <Style TargetType="ScrollViewer">
                        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
                    </Style>
                </ListBox.Resources>

                <!--  Task template for list  -->
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Background="White">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="0"
                                Width="Auto"
                                Height="Auto"
                                Margin="10"
                                Padding="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Command="{Binding DataContext.ToggleTaskCompleteCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                CommandParameter="{Binding}"
                                Content="✓"
                                FontSize="20">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Foreground" Value="Gray" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPinned}" Value="True">
                                                <Setter Property="Foreground" Value="Black" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <TextBlock
                                Grid.Row="0"
                                Grid.Column="1"
                                MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                                MaxHeight="44"
                                Margin="10,5,10,0"
                                FontWeight="Bold"
                                Text="{Binding Content}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="Wrap" />
                            <TextBlock
                                Grid.Row="1"
                                Grid.Column="1"
                                Margin="10,5,10,5"
                                FontSize="10"
                                Foreground="#868e96"
                                Text="{Binding Notification, StringFormat='{}{0:dd/MM/yyyy HH:mm}'}" />
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!--  Add task button  -->
            <Button
                Grid.Row="1"
                Width="80"
                Height="50"
                Margin="0,0,20,30"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Command="{Binding CreateTaskCommand}"
                Content="Add"
                Style="{StaticResource RoundedButton}" />
        </Grid>

        <!--  Loading Overlay  -->
        <Border
            x:Name="LoadingOverlay"
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            Panel.ZIndex="100"
            Background="#88000000"
            Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <ProgressBar
                        Width="100"
                        Height="20"
                        Foreground="#e6c03a"
                        IsIndeterminate="True" />
                    <TextBlock
                        Margin="0,10,0,0"
                        Foreground="White"
                        Text="Loading..."
                        TextAlignment="Center" />
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>
