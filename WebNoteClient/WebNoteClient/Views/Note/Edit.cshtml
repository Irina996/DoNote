@model WebNoteClient.Models.Note.EditNoteViewModel

@{
    ViewData["Title"] = "Edit Note";
}

<h1>Edit</h1>

<h4>Note</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Note.Id" type="hidden" />
            <div class="form-group my-3">
                <input asp-for="Note.Title" class="form-control title" />
                <span asp-validation-for="Note.Title" class="text-danger"></span>
            </div>
            <div class="form-group my-3">
                <textarea asp-for="Note.Content" class="form-control"></textarea>
                <span asp-validation-for="Note.Content" class="text-danger"></span>
            </div>
            <div class="form-group form-check my-3">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Note.IsPinned" /> @Html.DisplayNameFor(model => model.Note.IsPinned)
                </label>
            </div>
            <div class="form-group my-3">
                <select asp-for="Note.Category.Id">
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
                <span asp-validation-for="Note.Category" class="text-danger"></span>
            </div>
            <div class="form-group my-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="my-3">
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
