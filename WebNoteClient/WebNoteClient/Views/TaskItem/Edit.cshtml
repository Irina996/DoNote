@model WebNoteClient.Models.TaskItem.EditTaskViewModel

@{
    ViewData["Title"] = "Edit Task";
}

<h1>Edit</h1>

<h4>Task</h4>
<hr />
<div class="row">
    <div>
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="TaskItem.Id" type="hidden" />
            <div class="form-group my-3">
                <textarea asp-for="TaskItem.Content" class="form-control auto-resize-textarea"></textarea>
                <span asp-validation-for="TaskItem.Content" class="text-danger"></span>
            </div>
            <div class="form-group form-check my-3">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="TaskItem.IsCompleted" /> 
                    @Html.DisplayNameFor(model => model.TaskItem.IsCompleted)
                </label>
            </div>
            <div class="form-group my-3">
                <select asp-for="TaskItem.Category.Id">
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
                <span asp-validation-for="TaskItem.Category" class="text-danger"></span>
            </div>
            <div class="form-group my-3">
                <input asp-for="TaskItem.Notification"
                       type="datetime-local"
                       max="@DateTime.Now.AddYears(1).ToString("yyyy-MM-ddTHH:mm")"
                       min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
                <span asp-validation-for="TaskItem.Notification" class="text-danger"></span>
            </div>
            <div class="form-group my-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="my-3">
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const textarea = document.querySelector('textarea.auto-resize-textarea');
            if (textarea) {
                const autoResize = () => {
                    textarea.style.height = 'auto';
                    const newHeight = Math.min(textarea.scrollHeight, 500);
                    textarea.style.height = newHeight + 'px';
                };
                autoResize();
                textarea.addEventListener('input', autoResize);
            }
        });
    </script>
}
